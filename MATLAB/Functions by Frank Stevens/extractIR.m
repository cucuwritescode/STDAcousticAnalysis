function [ IR ] = extractIR( inname, invfiltname, trimlength)%EXTRACTIR Generates an IR from a recorded sweep and a corresponding%inverse filter. It will check in the input recording is mono, stereo, or Bformat%and will output IRs in a suitable format. For B-format IRs this includes mono and%mid-side stereo%% Usage:% ======%% inname        :       The name of the wav file containing the B-format%                       recorded sweep% invfilt       :       The name of the wav file containing the inverse%                       filter for the sine sweep used to make the recording% trimlength    :       Sets the length of the ouput file%% Example usage: % extractIRs('recordedsweep.wav','inversesweep.wav',10);%% =====================================================================% read in audio files[recordedsweep,fs] = audioread(inname);invfilt = audioread(invfiltname);% Find out how many channels there are in the recordingchannels = min(size(recordedsweep));% Create filter data with the right number of channelsinvfilt = repmat(invfilt(:,1),1,channels);% Perform deconvolutionN = length(recordedsweep) + length(invfilt)-1;IR = ifft( (fft(recordedsweep,N)).*fft(invfilt,N));  % trim off first inverse filter length plus one second's worth of samplesIR = IR(1 + length(invfilt) + fs:end,:);% time the result to lengthIR = IR(1:trimlength*fs,:);% output mono IRif channels == 1    outnamemono =  strcat('monoIR_',inname);    audiowrite(outnamemono,IR/max(abs(IR(:))),fs,'BitsPerSample',24);% ouptut stereo IRelseif channels == 2    outnamestereo =  strcat('stereoIR_',inname);    audiowrite(outnamestereo,IR/max(abs(IR(:))),fs,'BitsPerSample',24);% output B-format IR (plus mono and MS stereo)    elseif channels == 4    % get W and Y channels    W = IR(:,1);    Y = IR(:,3);           % write B format IR    outnamebf =  strcat('bformatIR_',inname);    audiowrite(outnamebf,IR/max(abs(IR(:))), fs,'BitsPerSample',24);    % write mono IR    outnamemonoB =  strcat('monobfIR_',inname);    audiowrite(outnamemonoB,W/max(max(abs(W))),fs,'BitsPerSample',24);    % write MS stereo IR    MS_IR = zeros(length(W),2);    MS_IR(:, 1) = W + 0.707*Y;    % Left channel mid-side decode    MS_IR(:, 2) = W - 0.707*Y;    % Right channel mid-side decode    MS_IR = MS_IR/max(max(abs(MS_IR))); % normalise    outnamems =  strcat('msstereoIR_',inname);    audiowrite(outnamems,MS_IR,fs,'BitsPerSample',24);end